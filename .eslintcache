[{"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\index.tsx":"1","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\App.tsx":"2","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\InputContainer.tsx":"3","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\SearchBox.tsx":"4","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\Filter.tsx":"5","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\NameList.tsx":"6","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\ListItem.tsx":"7","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\pages\\SingleNamePage.tsx":"8","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\pages\\MainPage.tsx":"9","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\Layout.tsx":"10","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\hooks\\useApi.js":"11","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\Loading.tsx":"12","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\Error.tsx":"13","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\assets\\loadingSpinner.jsx":"14","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\InfoBox.tsx":"15","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\InfoList.tsx":"16","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\types.ts":"17","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\hooks\\useSearchAndFilter.tsx":"18","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\Togglable.tsx":"19","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\NotFound.tsx":"20"},{"size":319,"mtime":1611252714666,"results":"21","hashOfConfig":"22"},{"size":517,"mtime":1611307950254,"results":"23","hashOfConfig":"22"},{"size":402,"mtime":1611317676651,"results":"24","hashOfConfig":"22"},{"size":827,"mtime":1611335522184,"results":"25","hashOfConfig":"22"},{"size":2613,"mtime":1611389625526,"results":"26","hashOfConfig":"22"},{"size":1278,"mtime":1611388764558,"results":"27","hashOfConfig":"22"},{"size":771,"mtime":1611314058908,"results":"28","hashOfConfig":"22"},{"size":1243,"mtime":1611321238983,"results":"29","hashOfConfig":"22"},{"size":1275,"mtime":1611388764550,"results":"30","hashOfConfig":"22"},{"size":485,"mtime":1611302037044,"results":"31","hashOfConfig":"22"},{"size":645,"mtime":1611385968579,"results":"32","hashOfConfig":"22"},{"size":246,"mtime":1611386011791,"results":"33","hashOfConfig":"22"},{"size":417,"mtime":1611314940569,"results":"34","hashOfConfig":"22"},{"size":1385,"mtime":1611386031401,"results":"35","hashOfConfig":"22"},{"size":557,"mtime":1611320614371,"results":"36","hashOfConfig":"22"},{"size":973,"mtime":1611321012307,"results":"37","hashOfConfig":"22"},{"size":367,"mtime":1611329566751,"results":"38","hashOfConfig":"22"},{"size":2175,"mtime":1611389788615,"results":"39","hashOfConfig":"22"},{"size":291,"mtime":1611382591866,"results":"40","hashOfConfig":"22"},{"size":149,"mtime":1611335846716,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1p42whl",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\index.tsx",[],[],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\App.tsx",[],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\InputContainer.tsx",[],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\SearchBox.tsx",[],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\Filter.tsx",["87","88"],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\NameList.tsx",[],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\ListItem.tsx",[],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\pages\\SingleNamePage.tsx",["89"],"import React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport InfoList from '../components/InfoList';\n\nimport TopContainer from '../components/InputContainer';\nimport { useApi } from '../hooks/useApi';\n\nimport { ReactComponent as GoBackIcon } from '../assets/arrow.svg';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface SingleNamePageProps {}\n\nconst mapResults = ({ data }: any) => {\n  return data[0];\n};\n\nconst SingleNamePage: React.FC<SingleNamePageProps> = () => {\n  const history = useHistory();\n  const { name } = useParams<{ name: string }>();\n  const { data, isLoading, error } = useApi(`http://localhost:5000/names/${name}`, mapResults);\n\n  function handleReturn() {\n    history.push(`/`);\n  }\n\n  return (\n    <>\n      <TopContainer>\n        {/* Container that splits icon and name apart */}\n        <div className='flex flex-column flex-grow justify-between'>\n          <h2 className='text-4xl text-center capitalize font-normal'> {name} </h2>\n          <GoBackIcon className='w-10 cursor-pointer' onClick={handleReturn} />\n        </div>\n      </TopContainer>\n      <InfoList data={data} error={error} isLoading={isLoading} />\n    </>\n  );\n};\n\nexport default SingleNamePage;\n","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\pages\\MainPage.tsx",["90","91","92"],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\Layout.tsx",[],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\hooks\\useApi.js",[],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\Loading.tsx",["93"],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\Error.tsx",["94"],"import React from 'react';\n\ninterface ErrorProps {\n  error: any;\n}\n\nconst Error: React.FC<ErrorProps> = ({ error }) => {\n  const message = error.response.data.message || `${error.response.status}: ${error.response.statusText}`;\n  return (\n    <div>\n      <h4 className='text-red-900 text-2xl pb-4'>Error occurred</h4>\n      <p className='text-gray-800 text-md'>{message}</p>\n    </div>\n  );\n};\n\nexport default Error;\n","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\assets\\loadingSpinner.jsx",[],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\InfoBox.tsx",["95"],"import React from 'react';\n\ninterface InfoBoxProps {\n  top: string | React.ReactNode;\n  center: any;\n  bottom: string | React.ReactNode;\n}\n\nconst InfoBox: React.FC<InfoBoxProps> = ({ top, center, bottom }) => {\n  return (\n    <div className='flex flex-col text-lg  bg-gray-50 p-6 py-10 rounded-3xl m-4 flex-grow shadow-lg'>\n      <p className='text-center'>{top}</p>\n      <h3 className='text-gray-800 text-5xl text-center p-4 font-bold text-shadow-lg'>{center}</h3>\n      <p className='text-center'>{bottom}</p>\n    </div>\n  );\n};\n\nexport default InfoBox;\n","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\InfoList.tsx",["96"],"import React from 'react';\nimport { Name } from '../types';\n\nimport Loading from './Loading';\nimport Error from './Error';\nimport InfoBox from './InfoBox';\n\ninterface InfoGridProps {\n  data: Name | undefined;\n  isLoading: boolean;\n  error: any;\n}\n\n// Helper function to capitalize words, which cannot be applied through tailwinds capitalize\nconst capitalize = (word: string) => {\n  return word.charAt(0).toUpperCase() + word.slice(1);\n};\n\nconst InfoList: React.FC<InfoGridProps> = ({ isLoading, error, data }) => {\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  if (error) {\n    return <Error error={error} />;\n  }\n\n  return (\n    <div className='flex flex-wrap'>\n      <InfoBox top='There are' center={data?.amount} bottom={`persons named ${capitalize(data?.name as string)} working in Solita`} />\n      <InfoBox top={`${capitalize(data?.name as string)} is the`} center='3rd / 24' bottom={`most popular name in Solita`} />\n    </div>\n  );\n};\n\nexport default InfoList;\n","C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\types.ts",[],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\hooks\\useSearchAndFilter.tsx",["97","98","99","100","101","102","103"],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\Togglable.tsx",[],"C:\\Users\\Allu\\CODING\\javascript\\solitas\\frontend\\src\\components\\NotFound.tsx",[],{"ruleId":"104","severity":1,"message":"105","line":7,"column":14,"nodeType":"106","messageId":"107","endLine":7,"endColumn":17,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":11,"column":53,"nodeType":"111","messageId":"112","endLine":11,"endColumn":66},{"ruleId":"104","severity":1,"message":"105","line":13,"column":31,"nodeType":"106","messageId":"107","endLine":13,"endColumn":34,"suggestions":"113"},{"ruleId":"109","severity":1,"message":"114","line":4,"column":17,"nodeType":"111","messageId":"112","endLine":4,"endColumn":26},{"ruleId":"109","severity":1,"message":"115","line":4,"column":28,"nodeType":"111","messageId":"112","endLine":4,"endColumn":36},{"ruleId":"104","severity":1,"message":"105","line":15,"column":31,"nodeType":"106","messageId":"107","endLine":15,"endColumn":34,"suggestions":"116"},{"ruleId":"104","severity":1,"message":"105","line":4,"column":25,"nodeType":"106","messageId":"107","endLine":4,"endColumn":28,"suggestions":"117"},{"ruleId":"104","severity":1,"message":"105","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":13,"suggestions":"118"},{"ruleId":"104","severity":1,"message":"105","line":5,"column":11,"nodeType":"106","messageId":"107","endLine":5,"endColumn":14,"suggestions":"119"},{"ruleId":"104","severity":1,"message":"105","line":11,"column":10,"nodeType":"106","messageId":"107","endLine":11,"endColumn":13,"suggestions":"120"},{"ruleId":"109","severity":1,"message":"121","line":1,"column":8,"nodeType":"111","messageId":"112","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"114","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":33,"column":28,"nodeType":"124","messageId":"125","endLine":33,"endColumn":78},{"ruleId":"122","severity":1,"message":"126","line":33,"column":29,"nodeType":"111","messageId":"127","endLine":33,"endColumn":38},{"ruleId":"104","severity":1,"message":"105","line":33,"column":35,"nodeType":"106","messageId":"107","endLine":33,"endColumn":38,"suggestions":"128"},{"ruleId":"104","severity":1,"message":"105","line":36,"column":40,"nodeType":"106","messageId":"107","endLine":36,"endColumn":43,"suggestions":"129"},{"ruleId":"104","severity":1,"message":"105","line":58,"column":39,"nodeType":"106","messageId":"107","endLine":58,"endColumn":42,"suggestions":"130"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["131","132"],"@typescript-eslint/no-unused-vars","'currentFilter' is defined but never used.","Identifier","unusedVar",["133","134"],"'useEffect' is defined but never used.","'useState' is defined but never used.",["135","136"],["137","138"],["139","140"],["141","142"],["143","144"],"'react' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'data' should be typed with a non-any type.","anyTypedArg",["145","146"],["147","148"],["149","150"],{"messageId":"151","fix":"152","desc":"153"},{"messageId":"154","fix":"155","desc":"156"},{"messageId":"151","fix":"157","desc":"153"},{"messageId":"154","fix":"158","desc":"156"},{"messageId":"151","fix":"159","desc":"153"},{"messageId":"154","fix":"160","desc":"156"},{"messageId":"151","fix":"161","desc":"153"},{"messageId":"154","fix":"162","desc":"156"},{"messageId":"151","fix":"163","desc":"153"},{"messageId":"154","fix":"164","desc":"156"},{"messageId":"151","fix":"165","desc":"153"},{"messageId":"154","fix":"166","desc":"156"},{"messageId":"151","fix":"167","desc":"153"},{"messageId":"154","fix":"168","desc":"156"},{"messageId":"151","fix":"169","desc":"153"},{"messageId":"154","fix":"170","desc":"156"},{"messageId":"151","fix":"171","desc":"153"},{"messageId":"154","fix":"172","desc":"156"},{"messageId":"151","fix":"173","desc":"153"},{"messageId":"154","fix":"174","desc":"156"},"suggestUnknown",{"range":"175","text":"176"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"175","text":"177"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"178","text":"176"},{"range":"178","text":"177"},{"range":"179","text":"176"},{"range":"179","text":"177"},{"range":"180","text":"176"},{"range":"180","text":"177"},{"range":"181","text":"176"},{"range":"181","text":"177"},{"range":"182","text":"176"},{"range":"182","text":"177"},{"range":"183","text":"176"},{"range":"183","text":"177"},{"range":"184","text":"176"},{"range":"184","text":"177"},{"range":"185","text":"176"},{"range":"185","text":"177"},{"range":"186","text":"176"},{"range":"186","text":"177"},[292,295],"unknown","never",[432,435],[592,595],[107,110],[60,63],[96,99],[240,243],[611,614],[811,814],[1474,1477]]